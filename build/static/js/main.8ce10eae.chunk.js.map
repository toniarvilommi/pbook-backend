{"version":3,"sources":["components/Filter.js","services/contacts.js","components/Form.js","components/Notification.js","components/ShowPeople.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","props","className","value","filter","placeholder","onChange","handleFilterChange","for","class","baseUrl","exportedObject","createContact","newObject","axios","post","then","response","data","getContacts","get","deleteContact","id","delete","updateContact","put","Form","newName","newNumber","persons","setPersons","setNewName","setNewNumber","setErrorMessage","setErrorMessageType","onSubmit","event","inList","preventDefault","tempPerson","name","number","forEach","element","toLowerCase","alert","window","confirm","tempObject","changedNumber","console","log","contacts","returnedNumber","map","setTimeout","concat","target","type","Notification","message","ShowPeople","useState","showDelete","setDelete","handleInput","catch","error","length","item","includes","person","onMouseOver","onMouseOut","style","display","onClick","App","setFilter","errorMessage","errorMessageType","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ce10eae.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"form__group field\">\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"form__field\"\r\n\t\t\t\tvalue={props.filter}\r\n\t\t\t\tplaceholder=\"Filter from here\"\r\n\t\t\t\tonChange={props.handleFilterChange}\r\n\t\t\t/>\r\n\t\t\t<label for=\"filter\" class=\"form__label\">Filter names</label>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n// const baseUrl = '/api/persons'\r\n\r\n/*\r\n* Get the json file from baseUrl and it's content\r\n*/\r\nconst getContacts = () => {\r\n\tconst request = axios.get(baseUrl)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\n/*\r\n* Create new contact (Object)\r\n*/\r\nconst createContact = newObject => {\r\n\tconst request = axios.post(baseUrl, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\n/*\r\n*  Delete the selected contact (Object)\r\n*/\r\nconst deleteContact = (id) => {\r\n\tconst request = axios.delete(`${baseUrl}/${id}`)\r\n\treturn request.then(response => response)\r\n}\r\n\r\n/*\r\n* Update the selected contact (Object)\r\n*/\r\nconst updateContact = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\n// To get rid of warning\r\n\r\nconst exportedObject = {\r\n\tcreateContact,\r\n\tgetContacts,\r\n\tdeleteContact,\r\n\tupdateContact\r\n};\r\n\r\n// Advanced declaration of object literals\r\nexport default exportedObject","import React from 'react'\r\nimport contacts from \"../services/contacts\";\r\n\r\n\r\nconst Form = (props) => {\r\n\t//Props to variables\r\n\tconst newName = props.newName\r\n\tconst newNumber = props.newNumber\r\n\tconst persons = props.persons\r\n\tconst setPersons = props.setPersons\r\n\tconst setNewName = props.setNewName\r\n\tconst setNewNumber = props.setNewNumber\r\n\tconst setErrorMessage = props.setErrorMessage\r\n\tconst setErrorMessageType = props.setErrorMessageType\r\n\t// const setFilter = props.setFilter\r\n\r\n\tconst addPerson = (event) => {\r\n\t\tlet inList = false\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst tempPerson = {\r\n\t\t\tname: newName,\r\n\t\t\tnumber: newNumber\r\n\t\t}\r\n\r\n\t\tpersons.forEach(element => {\r\n\t\t\tif (tempPerson.name.toLowerCase() === element.name.toLowerCase()) {\r\n\t\t\t\talert(`${newName} is already in the phonebook`)\r\n\t\t\t\tif (window.confirm(\"Do you want to replace the phone number?\")) {\r\n\t\t\t\t\tconst tempObject = element //Temporary object \r\n\t\t\t\t\tconst changedNumber = { ...tempObject, number: newNumber } //Changes data of the object\r\n\t\t\t\t\tconsole.log('element to update', changedNumber);\r\n\r\n\t\t\t\t\tcontacts\r\n\t\t\t\t\t\t.updateContact(element.id, changedNumber)\r\n\t\t\t\t\t\t.then(returnedNumber => {\r\n\t\t\t\t\t\t\tconsole.log('wtf is returned number?', returnedNumber);\r\n\t\t\t\t\t\t\tsetPersons(persons.map(number => number.id !== element.id ? number : returnedNumber)) //Return original object(number), if id is not id of the element. Else replace with the new object(returnedNumber)\r\n\r\n\t\t\t\t\t\t\t// Notification message\r\n\t\t\t\t\t\t\tsetErrorMessage(`Changed number for ${returnedNumber.name}`)\r\n\t\t\t\t\t\t\tsetErrorMessageType(2)\r\n\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\tsetErrorMessage(null)\r\n\t\t\t\t\t\t\t}, 2000)\r\n\t\t\t\t\t\t\t//Empty fields\r\n\t\t\t\t\t\t\tsetNewName('')\r\n\t\t\t\t\t\t\tsetNewNumber('')\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tsetNewName('')\r\n\t\t\t\tsetNewNumber('')\r\n\t\t\t\tinList = true\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (!inList) {\r\n\t\t\tcontacts\r\n\t\t\t\t.createContact(tempPerson)\r\n\t\t\t\t.then(response => {\r\n\t\t\t\t\tconsole.log('response in creating', response);\r\n\t\t\t\t\tsetPersons(persons.concat(response))\r\n\t\t\t\t\t// Notification message\r\n\t\t\t\t\tsetErrorMessage(`Added ${response.name}`)\r\n\t\t\t\t\tsetErrorMessageType(1)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetErrorMessage(null)\r\n\t\t\t\t\t}, 2000)\r\n\t\t\t\t\t//Empty fields\r\n\t\t\t\t\tsetNewName('')\r\n\t\t\t\t\tsetNewNumber('')\r\n\t\t\t\t})\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\t//Must be checked every new input\r\n\tconst handleNameChange = (event) => {\r\n\t\tsetNewName(event.target.value)\r\n\t}\r\n\t//Must be checked every new input\r\n\tconst handleNumberChange = (event) => {\r\n\t\tsetNewNumber(event.target.value)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={addPerson}>\r\n\t\t\t\t<div className=\"form__group field\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"form__field\"\r\n\t\t\t\t\t\tvalue={newName}\r\n\t\t\t\t\t\tplaceholder=\"Write name here\"\r\n\t\t\t\t\t\tonChange={handleNameChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label for=\"name\" class=\"form__label\">Name</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form__group field\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"form__field\"\r\n\t\t\t\t\t\tvalue={newNumber}\r\n\t\t\t\t\t\tplaceholder=\"040-1234567\"\r\n\t\t\t\t\t\tonChange={handleNumberChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label for=\"number\" class=\"form__label\">Number</label>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"submitContainer\">\r\n\t\t\t\t\t<button type=\"submit\" className=\"button\">Add contact</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n\tif (message === null) {\r\n\t\treturn null\r\n\t}\r\n\r\n\tswitch (type) {\r\n\t\tcase 1:\r\n\t\t\ttype = 'add'\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\ttype = 'change'\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\ttype = 'delete'\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\ttype = 'add'\r\n\t}\r\n\r\n\tif (!message) {\r\n\t\treturn (\r\n\t\t\t<div >\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`${type} notification`}>\r\n\t\t\t<h3>{message}</h3>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Notification","import React, { useState } from 'react'\r\nimport contacts from \"../services/contacts\";\r\nimport { GoPerson } from \"react-icons/go\";\r\nimport { FaPhoneAlt } from \"react-icons/fa\";\r\n\r\nconst ShowPeople = (props) => {\r\n\t//Props to variables\r\n\tconst setPersons = props.setPersons\r\n\tconst persons = props.persons\r\n\tconst filter = props.filter\r\n\tconst setErrorMessage = props.setErrorMessage\r\n\tconst setErrorMessageType = props.setErrorMessageType\r\n\t//State\r\n\tconst [showDelete, setDelete] = useState(0)\r\n\r\n\tconst handleInput = (event) => {\r\n\t\tlet id = event.target.value\r\n\t\tconsole.log('ID IS:', id);\r\n\t\tif (window.confirm(\"Do you really want to delete this?\")) {\r\n\r\n\t\t\t//Need to append the array for temporary use, so it's referencable later in the \"error message\"\r\n\t\t\t//Otherwise will get an error, because the data has been deleted already!\r\n\t\t\tcontacts\r\n\t\t\t\t.deleteContact(id)\r\n\t\t\t\t.then(response => {\r\n\t\t\t\t\t// Notification message\r\n\t\t\t\t\t// Has to be before filtering, because it created a bug\r\n\t\t\t\t\tsetErrorMessage(`Removed`)\r\n\t\t\t\t\tsetErrorMessageType(3)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetErrorMessage(null)\r\n\t\t\t\t\t}, 2000)\r\n\r\n\t\t\t\t\t//Fetch data and add it to setPersons state\r\n\t\t\t\t\tcontacts\r\n\t\t\t\t\t\t.getContacts()\r\n\t\t\t\t\t\t.then(response => {\r\n\t\t\t\t\t\t\tconsole.log('Fetch successful after deletion');\r\n\t\t\t\t\t\t\tconst tempPersons = response\r\n\t\t\t\t\t\t\tsetPersons(tempPersons)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\tconsole.log(error);\r\n\r\n\t\t\t\t\t// Notification\r\n\t\t\t\t\tsetErrorMessage(`Information of selected user has already been deleted`)\r\n\t\t\t\t\tsetErrorMessageType(3)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetErrorMessage(null)\r\n\t\t\t\t\t}, 2000)\r\n\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tconst handleHover = (event) => {\r\n\t\tsetDelete(event)\r\n\t}\r\n\r\n\tif (typeof persons !== 'undefined' && persons.length === 0) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<p>No contacts found, start by adding some.</p>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{persons.filter(item => item.name.toLowerCase().includes(filter.toLowerCase())).map(person =>\r\n\t\t\t\t<div key={person.name} className=\"contact\"\r\n\t\t\t\t\tonMouseOver={() => handleHover(person.id)}\r\n\t\t\t\t\tonMouseOut={() => setDelete(0)}\r\n\t\t\t\t>\r\n\r\n\t\t\t\t\t<p key={person.name}><GoPerson /> {person.name} - <FaPhoneAlt /> {person.number}</p>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tstyle={person.id === showDelete ? { display: 'block' } : { display: 'none' }}\r\n\t\t\t\t\t\tclassName=\"remove-button\"\r\n\t\t\t\t\t\tvalue={person.id}\r\n\t\t\t\t\t\tonClick={handleInput}\r\n\t\t\t\t\t>delete</button>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ShowPeople","import './App.scss';\nimport React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter.js'\nimport Form from './components/Form.js'\nimport Notification from './components/Notification.js'\nimport ShowPeople from './components/ShowPeople.js'\nimport contacts from \"./services/contacts\";\n\n\nconst App = () => {\n\n\tconst [persons, setPersons] = useState([])\n\tconst [newName, setNewName] = useState('')\n\tconst [newNumber, setNewNumber] = useState('')\n\tconst [filter, setFilter] = useState('')\n\tconst [errorMessage, setErrorMessage] = useState('')\n\tconst [errorMessageType, setErrorMessageType] = useState(1)\n\n\t//Fetch data from server\n\tconst fetchedData = () => {\n\t\tcontacts\n\t\t\t.getContacts()\n\t\t\t.then(response => {\n\t\t\t\tconsole.log('Fetch successful');\n\t\t\t\tconst tempPersons = response\n\t\t\t\tsetPersons(tempPersons)\n\t\t\t})\n\t}\n\tuseEffect(fetchedData, [])\n\n\t//Must be checked with every new input\n\tconst handleFilterChange = (event) => {\n\t\tsetFilter(event.target.value)\n\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\n\t\t\t<div>\n\t\t\t\t<h1>Phonebook</h1>\n\n\t\t\t</div>\n\t\t\t<h2>Add new contact</h2>\n\t\t\t<Form\n\t\t\t\tnewName={newName}\n\t\t\t\tnewNumber={newNumber}\n\t\t\t\tpersons={persons}\n\t\t\t\tsetPersons={setPersons}\n\t\t\t\tsetNewName={setNewName}\n\t\t\t\tsetNewNumber={setNewNumber}\n\t\t\t\tsetFilter={setFilter}\n\t\t\t\tsetErrorMessage={setErrorMessage}\n\t\t\t\tsetErrorMessageType={setErrorMessageType}\n\t\t\t/>\n\t\t\t<h2>Contact Book</h2>\n\t\t\t<ShowPeople\n\t\t\t\tsetPersons={setPersons}\n\t\t\t\tpersons={persons}\n\t\t\t\tfilter={filter}\n\t\t\t\tsetErrorMessage={setErrorMessage}\n\t\t\t\tsetErrorMessageType={setErrorMessageType}\n\t\t\t/>\n\t\t\t<Filter\n\t\t\t\tfilter={filter}\n\t\t\t\thandleFilterChange={handleFilterChange}\n\t\t\t/>\n\t\t\t<Notification message={errorMessage} type={errorMessageType} />\n\t\t</div >\n\t)\n\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}